/// data.forEach => css 列表
//  um-for-style
//  -
/// 遍历输出 css 规则和属性
/// - 如果属性为 background-image，会自动调用 bgurl 方法对值进行处理
/// @param {List} $key-value 遍历的数据（key：选择器，value：属性值）
/// @param {String} $prefix [''] 添加到 key 之前，拼接成一个新选择器
/// @param {String} $suffix [''] 添加到 key 之后，拼接成一个新选择器
/// @param {String, List} $lists [background-position] 属性列表，如果类型为 list，则值会一一对应 value 中的值
/// @param {Boolean} $is [false] 是否对值应用单位转换（为 true 时会对所有的值进行转换，而不会智能排除不该转换的属性值）
/// @example scss -
///   @include um-for-style((a: 20px 10px, b: 4px 2px)){
///     z-index: 1;  
///   }  
@mixin um-for-style($key-value, $prefix: '', $suffix: '', $lists: background-position, $is: false){
  $length: length($lists);
  
  @each $key, $value in $key-value {
    #{$prefix + $key + $suffix}{
      @if $length == 0 {
        @debug '$lists is empty';
      } @else if $length == 1 {
        @include um-for-style__use(nth($lists, 1), $value, $is);
      } @else {
        @for $i from 1 through $length {
          @if length($value) >= $i {
            @include um-for-style__use(nth($lists, $i), nth($value, $i), $is);
          }
        }
      }
      @content;
    }
  }
}

//  um-for-style__use
//  -
/// 组合属性和属性值
/// - 如果属性为 background-image，会自动调用 bgurl 方法对值进行处理
/// @access private
/// @param {String} $prop 属性
/// @param {Object} $value 属性值
/// @param {Boolean} $is 是否对值应用单位转换
/// @example scss -
///   @include um-for-style__use(z-index, 4, false);
@mixin um-for-style__use($prop, $value, $is){
  @if $prop == background-image {
    #{$prop}: bgurl($value);
  } @else {
    @if type-of($value) == number and $is {
      #{$prop}: all($value);
    } @else {
      #{$prop}: $value;
    }
  }
}